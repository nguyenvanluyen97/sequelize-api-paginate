const _0x145217 = _0x3ddb; (function (_0x3a906f, _0x42dd5e) { const _0x2e4ced = _0x3ddb, _0x521ff8 = _0x3a906f(); while (!![]) { try { const _0x23f6e7 = parseInt(_0x2e4ced(0x16f)) / 0x1 * (parseInt(_0x2e4ced(0x178)) / 0x2) + parseInt(_0x2e4ced(0x190)) / 0x3 * (parseInt(_0x2e4ced(0x196)) / 0x4) + -parseInt(_0x2e4ced(0x17e)) / 0x5 * (parseInt(_0x2e4ced(0x18e)) / 0x6) + -parseInt(_0x2e4ced(0x17d)) / 0x7 * (-parseInt(_0x2e4ced(0x18d)) / 0x8) + parseInt(_0x2e4ced(0x170)) / 0x9 + -parseInt(_0x2e4ced(0x176)) / 0xa + parseInt(_0x2e4ced(0x192)) / 0xb; if (_0x23f6e7 === _0x42dd5e) break; else _0x521ff8['push'](_0x521ff8['shift']()); } catch (_0x2858e0) { _0x521ff8['push'](_0x521ff8['shift']()); } } }(_0x459b, 0x8a822)); const Op = require(_0x145217(0x17f))['Op'], moment = require('moment'), listOperators = [{ 'operator': '==', 'meaning': _0x145217(0x184) }, { 'operator': '!=', 'meaning': _0x145217(0x16e) }, { 'operator': '>', 'meaning': _0x145217(0x187) }, { 'operator': '<', 'meaning': _0x145217(0x181) }, { 'operator': '>=', 'meaning': 'Greater\x20than\x20or\x20equal\x20to' }, { 'operator': '<=', 'meaning': 'Less\x20than\x20or\x20equal\x20to' }, { 'operator': '@=', 'meaning': 'Contains' }, { 'operator': '_=', 'meaning': _0x145217(0x194) }, { 'operator': '!@=', 'meaning': _0x145217(0x18b) }, { 'operator': _0x145217(0x177), 'meaning': 'Does\x20not\x20Starts\x20with' }, { 'operator': '[]', 'meaning': 'Only\x20datetime,\x20date\x20between\x20two\x20date' }]; function _0x459b() { const _0x4f7935 = ['indexOf', '!@=', 'push', 'exports', '10790890qaAuFY', '!_=', '40646MTeJVR', 'substring', 'startsWith', 'gte', 'notLike', '1675282uBSpsD', '10mKBycs', 'sequelize', 'forEach', 'Less\x20than', 'lastIndexOf', 'DD/MM/YYYY', 'Equals', 'split', 'trim', 'Greater\x20than', 'includes', 'operator', 'log', 'Does\x20not\x20Contains', 'YYYY/MM/DD', '8UPRiwf', '208770GKrZVe', 'null', '6zVTVlI', 'length', '3672526yHwvvX', 'not', 'Starts\x20with', 'join', '365324ERiYYP', 'lte', 'Not\x20equals', '27vczgii', '3702906NCqnNB', 'iLike']; _0x459b = function () { return _0x4f7935; }; return _0x459b(); } function _0x3ddb(_0x268939, _0x55a478) { const _0x459b43 = _0x459b(); return _0x3ddb = function (_0x3ddbe6, _0x51f7a8) { _0x3ddbe6 = _0x3ddbe6 - 0x16d; let _0x459ada = _0x459b43[_0x3ddbe6]; return _0x459ada; }, _0x3ddb(_0x268939, _0x55a478); } function generateConditionExtra(_0x9557c6) { const _0x5569c9 = _0x145217; try { let _0x260a1c = ''; listOperators[_0x5569c9(0x180)](_0x5b9c12 => { const _0x4dfe52 = _0x5569c9; _0x9557c6[_0x4dfe52(0x188)](_0x5b9c12[_0x4dfe52(0x189)]) && (_0x260a1c = _0x5b9c12['operator']); }); let _0x52dfc2 = _0x9557c6[_0x5569c9(0x185)](_0x260a1c); _0x52dfc2[0x0] = _0x52dfc2[0x0][_0x5569c9(0x186)](), _0x52dfc2[0x1] = _0x52dfc2[0x1][_0x5569c9(0x186)](); let _0x92ea86 = _0x52dfc2[0x1][_0x5569c9(0x185)]('(')[_0x5569c9(0x195)](''); _0x92ea86 = _0x92ea86[_0x5569c9(0x185)](')')[_0x5569c9(0x195)](''), _0x92ea86 = _0x92ea86[_0x5569c9(0x185)]('|'); let _0x5d8bdb = [], _0x2e075f = []; if (_0x52dfc2[0x0][_0x5569c9(0x188)]('|')) { let _0x2e7124 = getBetweenConfition(_0x52dfc2[0x0]); _0x2e075f = _0x2e7124['split']('|'); } else _0x2e075f[_0x5569c9(0x174)](_0x52dfc2[0x0]); return _0x2e075f[_0x5569c9(0x180)](_0x2d2e7e => { const _0x41a8da = _0x5569c9; _0x92ea86[_0x41a8da(0x180)](_0x3e4e15 => { const _0x169121 = _0x41a8da; let _0x56e2d0 = [_0x2d2e7e, _0x3e4e15[_0x169121(0x186)]()], _0x1a4082 = genCondition(_0x56e2d0, _0x260a1c); _0x5d8bdb[_0x169121(0x174)](_0x1a4082); }); }), _0x5d8bdb; } catch (_0x2c08d6) { return console[_0x5569c9(0x18a)](_0x2c08d6), {}; } } function getBetweenConfition(_0x2423b1) { const _0xebdd1 = _0x145217; return _0x2423b1[_0xebdd1(0x179)](_0x2423b1[_0xebdd1(0x172)]('(') + 0x1, _0x2423b1[_0xebdd1(0x182)](')'))[_0xebdd1(0x186)](); } function generateCondition(_0x35f5df) { const _0xf64f83 = _0x145217; try { let _0x4fae86 = ''; listOperators[_0xf64f83(0x180)](_0x28f9b0 => { const _0x5392ba = _0xf64f83; _0x35f5df['includes'](_0x28f9b0[_0x5392ba(0x189)]) && (_0x4fae86 = _0x28f9b0[_0x5392ba(0x189)]); }); let _0x3d87e1 = _0x35f5df[_0xf64f83(0x185)](_0x4fae86); _0x3d87e1[0x0] = _0x3d87e1[0x0][_0xf64f83(0x186)](), _0x3d87e1[0x1] = _0x3d87e1[0x1][_0xf64f83(0x186)](); let _0x54ff64 = genCondition(_0x3d87e1, _0x4fae86); return _0x54ff64; } catch (_0x537863) { return {}; } } function genCondition(_0xaa60cf, _0x5c23b3) { const _0x3e3595 = _0x145217; let _0x155d27 = {}, _0x4b27ba = _0xaa60cf[0x0]; _0x4b27ba[_0x3e3595(0x188)]('.') && (_0x4b27ba = '$' + _0x4b27ba + '$'); let _0x4b8802 = _0xaa60cf[0x1]; if (_0x4b8802 == _0x3e3595(0x18f)) _0x4b8802 = null; switch (_0x5c23b3) { case '==': _0x155d27[_0x4b27ba] = _0x4b8802; break; case '!=': _0x155d27[_0x4b27ba] = { [Op[_0x3e3595(0x193)]]: _0x4b8802 }; break; case '>': _0x155d27[_0x4b27ba] = { [Op['gt']]: _0x4b8802 }; break; case '<': _0x155d27[_0x4b27ba] = { [Op['lt']]: _0x4b8802 }; break; case '>=': _0x155d27[_0x4b27ba] = { [Op[_0x3e3595(0x17b)]]: _0x4b8802 }; break; case '<=': _0x155d27[_0x4b27ba] = { [Op[_0x3e3595(0x16d)]]: _0x4b8802 }; break; case '@=': _0x155d27[_0x4b27ba] = { [Op[_0x3e3595(0x171)]]: '%' + _0x4b8802 + '%' }; break; case '_=': _0x155d27[_0x4b27ba] = { [Op[_0x3e3595(0x17a)]]: _0x4b8802 }; break; case _0x3e3595(0x173): _0x155d27[_0x4b27ba] = { [Op[_0x3e3595(0x17c)]]: '%' + _0x4b8802 + '%' }; break; case _0x3e3595(0x177): _0x155d27[_0x4b27ba] = { [Op['notILike']]: '%' + _0x4b8802 }; break; case '[]': const _0x70d2f1 = getBetweenConfition(_0x4b8802), _0x2fffea = _0x70d2f1[_0x3e3595(0x185)]('-'), _0x2ab8fe = new Date(_0x2fffea[0x0]), _0x1beb80 = new Date(_0x2fffea[0x1]); _0x155d27[_0x4b27ba] = { [Op['between']]: [_0x2ab8fe, _0x1beb80] }; break; default: break; }return _0x155d27; } function getCorrectFormatTime(_0x4d76dd) { const _0x3541b6 = _0x145217, _0x35f5a9 = [_0x3541b6(0x18c), 'YYYY-MM-DD', _0x3541b6(0x183), 'DD-MM-YYYY']; for (let _0x4e6889 = 0x0; _0x4e6889 < _0x35f5a9[_0x3541b6(0x191)]; _0x4e6889++) { const _0xc0586b = _0x35f5a9[_0x4e6889]; if (moment(_0x4d76dd, _0xc0586b, !![])['isValid']()) return _0xc0586b; } return null; } module[_0x145217(0x175)] = { 'generateCondition': generateCondition, 'generateConditionExtra': generateConditionExtra, 'getCorrectFormatTime': getCorrectFormatTime };